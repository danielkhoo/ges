{"version":3,"file":"static/webpack/static/development/pages/index.js.ed5b2c1927936af90395.hot-update.js","sources":["webpack:///./pages/DegreeAnalyzer.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Banner from \"../src/components/Banner/Banner\";\nimport Chart from \"../src/components/Chart/Chart\";\nimport Instructions from \"../src/components/Instructions/Instructions\";\nimport ListHeaders from \"../src/components/Analyzer/ListHeaders/ListHeaders\";\nimport ListItems from \"../src/components/Analyzer/ListItems/ListItems\";\nimport SearchBar from \"../src/components/Analyzer/SearchBar/SearchBar\";\nimport SearchFilters from \"../src/components/Analyzer/SearchFilters/SearchFilters\";\nimport data from \"../src/assets/data\";\nimport sampledata from \"../src/assets/sample\";\nimport classes from \"./DegreeAnalyzer.module.css\";\nimport Degree from \"../src/classes/Degree\";\nimport Layout from \"../src/hoc/Layout/Layout\";\nimport Head from \"next/head\";\nconst fullDataset: any = data;\n\ninterface IDegreeAnalyzerState {\n  input: string;\n  filters: string[];\n  filteredItems: Degree[];\n}\nclass DegreeAnalyzer extends React.Component<{}, IDegreeAnalyzerState> {\n  state: IDegreeAnalyzerState = {\n    input: \"\",\n    filters: [\"NTU\", \"SMU\"],\n    filteredItems: sampledata\n  };\n  filterData = (data: Degree[], filters: string[], input: string) => {\n    let filteredItems: Degree[] = [];\n    //filter by school\n    filters.forEach((key: any) => {\n      filteredItems = filteredItems.concat(data[key]);\n    });\n    //filter by keyword\n    return filteredItems.filter(\n      item => item.degree.toLowerCase().indexOf(input) > -1\n    );\n  };\n\n  addFilterHandler = (name: string) => {\n    let currentFilters = this.state.filters;\n    if (currentFilters.indexOf(name) === -1) {\n      currentFilters.push(name);\n      const input = this.state.input;\n      let filteredItems = this.filterData(fullDataset, currentFilters, input);\n      this.setState({ filters: currentFilters, filteredItems: filteredItems });\n    }\n  };\n  removeFilterHandler = (name: string) => {\n    let currentFilters = this.state.filters;\n    if (currentFilters.indexOf(name) !== -1) {\n      currentFilters.splice(currentFilters.indexOf(name), 1);\n      const input = this.state.input;\n      let filteredItems = this.filterData(fullDataset, currentFilters, input);\n      this.setState({ filters: currentFilters, filteredItems: filteredItems });\n    }\n  };\n  textChangedHandler = (event: any) => {\n    const input = event.target.value.toLowerCase();\n    const currentFilters = this.state.filters;\n    let filteredItems = this.filterData(fullDataset, currentFilters, input);\n    this.setState({ input: input, filteredItems: filteredItems });\n  };\n  keyPressHandler = (event: any) => {\n    if (event.key === \"Enter\") {\n      event.target.blur();\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Head>\n          <link\n            href='https://fonts.googleapis.com/css?family=Open+Sans:300,400,700'\n            rel='stylesheet'\n          />\n          <link\n            href='https://fonts.googleapis.com/css?family=IBM+Plex+Mono:400,600'\n            rel='stylesheet'\n          />\n          {/* <link href='index.css' rel='stylesheet' /> */}\n\n          <title>GES 2018</title>\n        </Head>\n        <Banner />\n        <Chart chartData={this.state.filteredItems} />\n        <Instructions>Select the one or more schools to view.</Instructions>\n        <SearchFilters\n          addFilter={this.addFilterHandler}\n          removeFilter={this.removeFilterHandler}\n          filters={this.state.filters}\n        />\n        <Instructions>\n          Use the search box to narrow down the results.\n        </Instructions>\n        <SearchBar\n          changed={event => this.textChangedHandler(event)}\n          keypress={event => this.keyPressHandler(event)}\n        />\n\n        <div className={classes.ResultsTable}>\n          <ListHeaders />\n          <ListItems items={this.state.filteredItems} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default DegreeAnalyzer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtFA;AACA;AAwFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}